name: Examples Code Test

on:
  push:
    branches:
      - main
    paths:
      - examples/**
      - .github/workflows/examples-test.yml
      - compile_testing.py
      - compile_testing.js
  pull_request:
    paths:
      - examples/**
      - .github/workflows/examples-test.yml
      - compile_testing.py
      - compile_testing.js

  workflow_dispatch:
  repository_dispatch:


jobs:
  test-python:
    name: Test python examples
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "11" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.${{ matrix.python-version }}
          cache: "pip"
      - name: Create files
        run: |
          python -m pip install --upgrade pip
          python compile_testing.py
      - name: Install dependencies
        run: |
          sudo apt-get install unzip
          cd testing-folder
          pip install -r joined-requirements.txt
          cd ..
          : # bash convert-ipynb.sh
      - name: Download datasets
        run: |
          cd testing-folder
          bash commands.sh
      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        working-directory: testing-folder
        run: |
          for d in *; do
            if [[ $d == *.py ]]; then
              echo "$d";
              pytest "$d" -s;
            fi
          done
  test-node:
    name: Test node examples
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ "18" ]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true
    - uses: actions/checkout@v3
      with:
        repository: lancedb/lancedb
        path: './lancedb'
        ref: main
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y protobuf-compiler libssl-dev
        npm install -g package-json-merge
    - name: Build LanceDB
      working-directory: lancedb/node
      run: |
        npm ci
        npm run tsc
        npm pack
    - name: Run compile_testing.js
      run: |
        node compile_testing.js
    - name: Create files
      working-directory: testing-folder
      run: |
        bash merge-package.sh
        iconv -f UTF-8 -t UTF-8 temp.json > package.json
        cat package.json
        npm install
        npm uninstall @lancedb/vectordb-linux-x64-gnu
    - name: Install LanceDB
      working-directory: lancedb/node
      run: |
        for d in *; do
          if [[ $d == *.tgz ]]; then
            echo "$d";
            npm install "$d";
          fi
        done
    - uses: swatinem/rust-cache@v2
    - name: Download datasets
      run: |
        cd testing-folder
        bash commands.sh
    - name: Run tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        cd testing-folder
        for d in *; do
          if [[ $d == *.js ]]; then
            echo "$d";
            node "$d";
          fi
        done